%% Investigate the idea of dynamic single point imaging with regularized reconstruction for inherent distortion free MRI
% Inherent distortion free mri with accelerated single point imaging and regularized reconstruction
% possible names:
% spicy
% spike
% spinach
% spiro

% Assumptions:
% 1) No T1/T2 decay
% 2) Single receiver work
% 3) Initial image = 100% real-valued
clear all;close all;clc;figure
addpath(genpath(cd))
addpath(genpath('/nfs/rtsan02/userdata/home/tbruijne/Documents/MATLAB/MReconUMC/MReconUMC/MReconUMC_V5/Packages/utils'))
addpath(genpath('/home/tbruijne/Documents/MATLAB/MReconUMC/MReconUMC/MReconUMC_V5/Standalone/Fessler_nufft/'))

woff_fat=0; % Hz
%% Phantom + field generation
N=64;

% Water layer phantom
x_w=phantom(N);

% Fat layer phantom
x_f=zeros(size(x_w));
x_f(x_w==1)=0; % fat fraction
x_w(x_w==1)=.2;
subplot(331);imshow(x_w,[]);title('Water phantom')
subplot(332);imshow(x_f,[]);title('Fat phantom')

% B0cp=ceil(nsamples/2);

w_max=1; % 100 Hz
B0=rot90(w_max*normalise(generate_b0(1,N)),1);
subplot(333);imshow(B0,[]);colormap(gca, jet);title('B0');

%% Sequence settings
SQ.TE=1.4E-03;
SQ.ADC_duration=.1E-03;
SQ.ADC_dt=SQ.ADC_duration/(N);
fat_phi=@(tau,woff)(sin((woff_fat+woff).*tau));
water_phi=@(tau,woff)(sin(woff.*tau));

%% Standard Cartesian acquisition
k=zeros(N,N);
for fe=1:N
    % Apply phase ramping due to off res + chem shift
    x=exp(-1j*2*pi*fat_phi(SQ.TE+(fe-1)*SQ.ADC_dt,B0)).*x_f+...
        exp(-1j*2*pi*water_phi(SQ.TE+(fe-1)*SQ.ADC_dt,B0)).*x_w;
    
    % Sample a complete phase-encode line (say TE)
    X=ifftshift(fft2(fftshift(x)));
    k(fe,:)=X(fe,:);
end

x_recon=ifftshift(ifft2(fftshift(k)));
subplot(334);imshow(abs(x_recon),[]);title('Geometrically distorted')

%% Proposed method
% Assume I take 33 samples across the ADC --> 33 2D images
% Also assume that I take N readouts
nsamples=33;
k=zeros(nsamples,N);

% Compute Golden angle radial trajectory with N readouts
% First compute the radial angles
d_angle=pi/((1+sqrt(5))/2);angles=0:d_angle:d_angle*(N-1);

% Now compute all the sample points that I want!
kx=linspace(0,nsamples-1,nsamples)'-(nsamples-1)/2;

% Modulate the phase of all the successive spokes
for l=1:N
    k(:,l)=kx*exp(-1j*angles(l));
end

% Normalise
k=.5*k/max(k(:));
cp=ceil(nsamples/2);

% For every adc point select the adequate k-pos and store --> Still
% requires a lot of effort
k_ref=size(nsamples,N);

for ns=1:nsamples
    for s_itl=1:N    
        idx=cp+s_itl;
        while idx > nsamples
            idx=idx-cp-1;
        end
        
        proj=s_itl+ns-1;
        while proj>N
            proj=proj-N;
        end
        k_ref(ns,s_itl)=k(idx,proj);
        
        %scatter(real(k(idx,proj)),imag(k(idx,proj)));hold on;pause(1);axis([-.5 .5 -.5 .5])
    end
end

% Estimate density function
for ns=1:nsamples;dcf(ns,:)=sdc3_MAT(cat(1,real(k(ns,:)),imag(k(ns,:)),zeros(size(k(ns,:)))),25,N,0);end
dcf=abs(k)

% Precreate Cartesian mesh for interpolation
cxy=linspace(-.5,.5,round(N)+1);cxy(end)=[];
[KX,KY]=meshgrid(cxy,cxy);

% Perform k-space sampling
kdata=zeros(size(k_ref));
for fe=1:nsamples
    % Apply phase ramping due to off res + chem shift
    x=exp(-1j*2*pi*fat_phi(SQ.TE+(fe-1)*SQ.ADC_dt,B0)).*x_f+...
        exp(-1j*2*pi*water_phi(SQ.TE+(fe-1)*SQ.ADC_dt,B0)).*x_w;
    
    % Sample a complete phase-encode line (say TE)
    X=ifftshift(fft2(fftshift(x)));
    
    % Interpolation
    kdata(fe,:)=interp2(KX,KY,X,real(k(fe,:)),imag(k(fe,:)),'spline');
end

% Fourier transform
for ns=1:nsamples
    om=[real(k(ns,:)); imag(k(ns,:))]'*2*pi;
    F=nufft_init(om,[N N],[5 5],2*[N N],.5*[N N],'table', 2^12,'minmax:kb');
    recon(:,:,ns)=nufft_adj(matrix_to_vec(dcf(ns,:).*kdata(ns,:)),F)/sqrt(N^2);
end

